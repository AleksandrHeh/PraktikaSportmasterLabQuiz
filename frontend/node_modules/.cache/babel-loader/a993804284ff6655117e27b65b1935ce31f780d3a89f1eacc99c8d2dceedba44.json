{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-33ccd002\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Username:\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Password:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Confirm Password:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  type: \"submit\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($props.title), 1 /* TEXT */), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), $props.isRegister ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", _hoisted_5, _toDisplayString($props.buttonText), 1 /* TEXT */)], 32 /* NEED_HYDRATION */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","type","_createElementBlock","_toDisplayString","$props","title","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_1","$event","$data","username","_hoisted_2","password","isRegister","_hoisted_3","_hoisted_4","confirmPassword","_createCommentVNode","_hoisted_5","buttonText","errorMessage","_hoisted_6"],"sources":["/home/aleksandr/PraktikaSportmasterLabQuiz/frontend/src/components/CommonForm.vue"],"sourcesContent":["<!-- CommonForm.vue -->\n<template>\n  <div>\n    <h2>{{ title }}</h2>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label>Username:</label>\n        <input type=\"text\" v-model=\"username\">\n      </div>\n      <div>\n        <label>Password:</label>\n        <input type=\"password\" v-model=\"password\">\n      </div>\n      <div v-if=\"isRegister\">\n        <label>Confirm Password:</label>\n        <input type=\"password\" v-model=\"confirmPassword\">\n      </div>\n      <button type=\"submit\">{{ buttonText }}</button>\n    </form>\n    <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: String,\n    buttonText: String,\n    isRegister: Boolean  // Флаг для отображения/скрытия поля подтверждения пароля при регистрации\n  },\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',  // Поле подтверждения пароля для регистрации\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Отправка запроса на сервер\n        const response = await this.$axios.post(this.formAction, {\n          username: this.username,\n          password: this.password,\n          confirmPassword: this.confirmPassword  // Отправка подтверждения пароля при регистрации\n        });\n        // Обработка успешного ответа\n        console.log(response.data);\n      } catch (error) {\n        // Обработка ошибок\n        if (error.response && error.response.status === 400) {\n          this.errorMessage = 'Invalid username or password';\n        } else {\n          this.errorMessage = 'Error submitting the form';\n        }\n        console.error('Form submission error:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Стили для компонента */\n</style>\n"],"mappings":";;gEAMQA,mBAAA,CAAwB,eAAjB,WAAS;gEAIhBA,mBAAA,CAAwB,eAAjB,WAAS;;EAVxBC,GAAA;AAAA;gEAcQD,mBAAA,CAAgC,eAAzB,mBAAiB;;EAGlBE,IAAI,EAAC;AAAQ;;EAjB3BD,GAAA;AAAA;;uBAEEE,mBAAA,CAkBM,cAjBJH,mBAAA,CAAoB,YAAAI,gBAAA,CAAbC,MAAA,CAAAC,KAAK,kBACZN,mBAAA,CAcO;IAdAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJjBC,cAAA,KAAAC,IAAA,KAI2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BV,mBAAA,CAGM,cAFJa,UAAwB,E,gBACxBb,mBAAA,CAAsC;IAA/BE,IAAI,EAAC,MAAM;IAP1B,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAOoCC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;iDAARC,KAAA,CAAAC,QAAQ,E,KAEtChB,mBAAA,CAGM,cAFJiB,UAAwB,E,gBACxBjB,mBAAA,CAA0C;IAAnCE,IAAI,EAAC,UAAU;IAX9B,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAWwCC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;iDAARC,KAAA,CAAAG,QAAQ,E,KAE/Bb,MAAA,CAAAc,UAAU,I,cAArBhB,mBAAA,CAGM,OAhBZiB,UAAA,GAcQC,UAAgC,E,gBAChCrB,mBAAA,CAAiD;IAA1CE,IAAI,EAAC,UAAU;IAf9B,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAewCC,KAAA,CAAAO,eAAe,GAAAR,MAAA;iDAAfC,KAAA,CAAAO,eAAe,E,OAfvDC,mBAAA,gBAiBMvB,mBAAA,CAA+C,UAA/CwB,UAA+C,EAAApB,gBAAA,CAAtBC,MAAA,CAAAoB,UAAU,iB,4BAE5BV,KAAA,CAAAW,YAAY,I,cAArBvB,mBAAA,CAA6C,KAnBjDwB,UAAA,EAAAvB,gBAAA,CAmB8BW,KAAA,CAAAW,YAAY,oBAnB1CH,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}