{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: {\n    isRegister: Boolean\n  },\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  computed: {\n    formTitle() {\n      return this.isRegister ? 'Регистрация' : 'Авторизация';\n    },\n    submitButtonText() {\n      return this.isRegister ? 'Зарегистрироваться' : 'Войти';\n    }\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/login', {\n          username: this.username,\n          password: this.password\n        });\n        // Сохраняем токен и информацию о пользователе в localStorage\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('username', this.username);\n\n        // Редирект на QuizComponent\n        this.$router.push('/quiz');\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          this.errorMessage = 'Неправильное имя пользователя или пароль';\n        } else {\n          this.errorMessage = 'Ошибка при отправке формы';\n        }\n        console.error('Ошибка отправки формы:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","isRegister","Boolean","data","username","password","errorMessage","computed","formTitle","submitButtonText","methods","submitForm","response","post","localStorage","setItem","token","$router","push","error","status","console"],"sources":["/home/aleksandr/PraktikaSportmasterLabQuiz/frontend/src/components/LoginComponent.vue"],"sourcesContent":["<template>\n    <div class=\"auth-container\">\n      <h2>{{ formTitle }}</h2>\n      <form @submit.prevent=\"submitForm\">\n        <div>\n          <label>Имя пользователя:</label>\n          <input type=\"text\" v-model=\"username\">\n        </div>\n        <div>\n          <label>Пароль:</label>\n          <input type=\"password\" v-model=\"password\">\n        </div>\n        <button type=\"submit\">{{ submitButtonText }}</button>\n      </form>\n      <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    props: {\n      isRegister: Boolean\n    },\n    data() {\n      return {\n        username: '',\n        password: '',\n        errorMessage: '',\n      };\n    },\n    computed: {\n      formTitle() {\n        return this.isRegister ? 'Регистрация' : 'Авторизация';\n      },\n      submitButtonText() {\n        return this.isRegister ? 'Зарегистрироваться' : 'Войти';\n      }\n    },\n    methods: {\n      async submitForm() {\n        try {\n          const response = await axios.post('http://localhost:3000/api/login', {\n            username: this.username,\n            password: this.password\n          });\n          // Сохраняем токен и информацию о пользователе в localStorage\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('username', this.username);\n  \n          // Редирект на QuizComponent\n          this.$router.push('/quiz');\n        } catch (error) {\n          if (error.response && error.response.status === 400) {\n            this.errorMessage = 'Неправильное имя пользователя или пароль';\n          } else {\n            this.errorMessage = 'Ошибка при отправке формы';\n          }\n          console.error('Ошибка отправки формы:', error);\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .auth-container {\n    max-width: 400px;\n    margin: auto;\n    padding: 20px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    background-color: #f2f9ff;\n  }\n  \n  h2 {\n    text-align: center;\n  }\n  \n  form {\n    margin-bottom: 20px;\n  }\n  \n  label {\n    display: block;\n    margin-bottom: 5px;\n  }\n  \n  input[type=\"text\"],\n  input[type=\"password\"] {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n  \n  button {\n    width: 100%;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    cursor: pointer;\n    border-radius: 4px;\n  }\n  \n  button:hover {\n    background-color: #0056b3;\n  }\n  \n  p {\n    color: red;\n    margin-top: 10px;\n  }\n  </style>\n  "],"mappings":";AAmBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAEC;EACd,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACP,UAAS,GAAI,aAAY,GAAI,aAAa;IACxD,CAAC;IACDQ,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACR,UAAS,GAAI,oBAAmB,GAAI,OAAO;IACzD;EACF,CAAC;EACDS,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,iCAAiC,EAAE;UACnET,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF;QACAS,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACT,IAAI,CAACa,KAAK,CAAC;QAClDF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAACX,QAAQ,CAAC;;QAE/C;QACA,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC5B,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACP,QAAO,IAAKO,KAAK,CAACP,QAAQ,CAACQ,MAAK,KAAM,GAAG,EAAE;UACnD,IAAI,CAACd,YAAW,GAAI,0CAA0C;QAChE,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,2BAA2B;QACjD;QACAe,OAAO,CAACF,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}