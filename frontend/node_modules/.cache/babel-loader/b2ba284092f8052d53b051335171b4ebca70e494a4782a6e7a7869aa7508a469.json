{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/api/axios';\nimport { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      isRegisterMode: false\n    };\n  },\n  computed: {\n    formTitle() {\n      return this.isRegisterMode ? 'Регистрация' : 'Авторизация';\n    },\n    submitButtonText() {\n      return this.isRegisterMode ? 'Зарегистрироваться' : 'Войти';\n    }\n  },\n  methods: {\n    ...mapActions(['login']),\n    async submitForm() {\n      try {\n        const response = await axios.post('/login', {\n          username: this.username,\n          password: this.password,\n          confirmPassword: this.confirmPassword\n        });\n        if (response.status === 200) {\n          const user = {\n            username: this.username,\n            token: response.data.token\n          };\n          localStorage.setItem('token', response.data.token);\n          this.login(user); // Save user to Vuex store\n          this.$router.push('/quiz'); // Redirect to QuizComponent\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          this.errorMessage = 'Неправильное имя пользователя или пароль';\n        } else {\n          this.errorMessage = 'Ошибка при отправке формы';\n        }\n        console.error('Ошибка отправки формы:', error);\n      }\n    },\n    setLoginMode() {\n      this.isRegisterMode = false;\n      this.errorMessage = '';\n    },\n    setRegisterMode() {\n      this.isRegisterMode = true;\n      this.errorMessage = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","mapActions","data","username","password","confirmPassword","errorMessage","isRegisterMode","computed","formTitle","submitButtonText","methods","submitForm","response","post","status","user","token","localStorage","setItem","login","$router","push","error","console","setLoginMode","setRegisterMode"],"sources":["/home/aleksandr/PraktikaSportmasterLabQuiz/frontend/src/components/CommonForm.vue"],"sourcesContent":["<template>\n  <div class=\"auth-container\">\n    <h2>{{ formTitle }}</h2>\n\n    <div class=\"operation-buttons\">\n      <button @click=\"setLoginMode\">Авторизация</button>\n      <button @click=\"setRegisterMode\">Регистрация</button>\n    </div>\n\n    <form v-if=\"!isRegisterMode\" @submit.prevent=\"submitForm\">\n      <div>\n        <label>Имя пользователя:</label>\n        <input type=\"text\" v-model=\"username\">\n      </div>\n      <div>\n        <label>Пароль:</label>\n        <input type=\"password\" v-model=\"password\">\n      </div>\n      <button type=\"submit\">{{ submitButtonText }}</button>\n    </form>\n\n    <form v-if=\"isRegisterMode\" @submit.prevent=\"submitForm\">\n      <div>\n        <label>Имя пользователя:</label>\n        <input type=\"text\" v-model=\"username\">\n      </div>\n      <div>\n        <label>Пароль:</label>\n        <input type=\"password\" v-model=\"password\">\n      </div>\n      <div>\n        <label>Подтвердите пароль:</label>\n        <input type=\"password\" v-model=\"confirmPassword\">\n      </div>\n      <button type=\"submit\">{{ submitButtonText }}</button>\n    </form>\n\n    <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script>\nimport axios from '@/api/axios';\nimport { mapActions } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      isRegisterMode: false,\n    };\n  },\n  computed: {\n    formTitle() {\n      return this.isRegisterMode ? 'Регистрация' : 'Авторизация';\n    },\n    submitButtonText() {\n      return this.isRegisterMode ? 'Зарегистрироваться' : 'Войти';\n    }\n  },\n  methods: {\n    ...mapActions(['login']),\n    async submitForm() {\n      try {\n        const response = await axios.post('/login', {\n          username: this.username,\n          password: this.password,\n          confirmPassword: this.confirmPassword\n        });\n        if (response.status === 200) {\n          const user = { username: this.username, token: response.data.token };\n          localStorage.setItem('token', response.data.token);\n          this.login(user); // Save user to Vuex store\n          this.$router.push('/quiz'); // Redirect to QuizComponent\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          this.errorMessage = 'Неправильное имя пользователя или пароль';\n        } else {\n          this.errorMessage = 'Ошибка при отправке формы';\n        }\n        console.error('Ошибка отправки формы:', error);\n      }\n    },\n    setLoginMode() {\n      this.isRegisterMode = false;\n      this.errorMessage = '';\n    },\n    setRegisterMode() {\n      this.isRegisterMode = true;\n      this.errorMessage = '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Стили для компонента */\n.auth-container {\n  max-width: 400px;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f2f9ff;\n}\n\nh2 {\n  text-align: center;\n}\n\nform {\n  margin-bottom: 20px;\n}\n\n.label {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"] {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\nbutton {\n  width: 100%;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  border-radius: 4px;\n  margin-top: 10px;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n\n.operation-buttons {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n}\n\np {\n  color: red;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AA0CA,OAAOA,KAAI,MAAO,aAAa;AAC/B,SAASC,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACF,cAAa,GAAI,aAAY,GAAI,aAAa;IAC5D,CAAC;IACDG,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACH,cAAa,GAAI,oBAAmB,GAAI,OAAO;IAC7D;EACF,CAAC;EACDI,OAAO,EAAE;IACP,GAAGV,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IACxB,MAAMW,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,QAAQ,EAAE;UAC1CX,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,eAAe,EAAE,IAAI,CAACA;QACxB,CAAC,CAAC;QACF,IAAIQ,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAMC,IAAG,GAAI;YAAEb,QAAQ,EAAE,IAAI,CAACA,QAAQ;YAAEc,KAAK,EAAEJ,QAAQ,CAACX,IAAI,CAACe;UAAM,CAAC;UACpEC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACX,IAAI,CAACe,KAAK,CAAC;UAClD,IAAI,CAACG,KAAK,CAACJ,IAAI,CAAC,EAAE;UAClB,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC,EAAE;QAC9B;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACV,QAAO,IAAKU,KAAK,CAACV,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UACnD,IAAI,CAACT,YAAW,GAAI,0CAA0C;QAChE,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,2BAA2B;QACjD;QACAkB,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAAClB,cAAa,GAAI,KAAK;MAC3B,IAAI,CAACD,YAAW,GAAI,EAAE;IACxB,CAAC;IACDoB,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACnB,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACD,YAAW,GAAI,EAAE;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}