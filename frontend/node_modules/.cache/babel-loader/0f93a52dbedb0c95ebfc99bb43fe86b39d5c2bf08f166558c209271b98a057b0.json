{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-66f59a28\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"quiz-container\"\n};\nconst _hoisted_2 = {\n  class: \"header-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Спортмастер\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", null, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"Logout\")])]), _createCommentVNode(\" Остальной код QuizComponent \"), _createCommentVNode(\" ... \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","logout","_createCommentVNode"],"sources":["/home/aleksandr/PraktikaSportmasterLabQuiz/frontend/src/components/QuizComponent.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-container\">\n    <header>\n      <div class=\"header-content\">\n        <h1>Спортмастер</h1>\n        <button @click=\"logout\">Logout</button>\n      </div>\n    </header>\n\n    <!-- Остальной код QuizComponent -->\n    <!-- ... -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      score: 0,\n      showResult: false\n    };\n  },\n  computed: {\n    currentQuestion() {\n      return this.questions[this.currentQuestionIndex];\n    }\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/questions');\n        this.questions = response.data;\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    },\n    checkAnswer(answer) {\n      if (answer.is_correct) {\n        this.score++;\n      }\n      if (this.currentQuestionIndex + 1 < this.questions.length) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showResult = true;\n      }\n    },\n    restartQuiz() {\n      this.currentQuestionIndex = 0;\n      this.score = 0;\n      this.showResult = false;\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/login');\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n};\n</script>\n\n<style scoped>\n/* Стили для компонента */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EAElBA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAoB,YAAhB,aAAW;;uBAHrBC,mBAAA,CAUM,OAVNC,UAUM,GATJF,mBAAA,CAKS,iBAJPA,mBAAA,CAGM,OAHNG,UAGM,GAFJC,UAAoB,EACpBJ,mBAAA,CAAuC;IAA9BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,QAAM,E,KAIlCG,mBAAA,iCAAoC,EACpCA,mBAAA,SAAY,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}