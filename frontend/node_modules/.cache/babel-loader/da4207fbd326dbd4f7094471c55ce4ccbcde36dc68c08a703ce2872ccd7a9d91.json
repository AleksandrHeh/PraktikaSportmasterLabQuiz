{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-33ccd002\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"common-form\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Username:\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Password:\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0,\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Confirm Password:\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($props.title), 1 /* TEXT */), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), $props.isRegister ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", _hoisted_8, _toDisplayString($props.buttonText), 1 /* TEXT */)], 32 /* NEED_HYDRATION */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","type","_createElementBlock","_hoisted_1","_toDisplayString","$props","title","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_2","_hoisted_3","$event","$data","username","_hoisted_4","_hoisted_5","password","isRegister","_hoisted_6","_hoisted_7","confirmPassword","_createCommentVNode","_hoisted_8","buttonText","errorMessage","_hoisted_9"],"sources":["/home/aleksandr/PraktikaSportmasterLabQuiz/frontend/src/components/CommonForm.vue"],"sourcesContent":["<template>\n  <div class=\"common-form\">\n    <h2>{{ title }}</h2>\n    <form @submit.prevent=\"submitForm\">\n      <div class=\"form-group\">\n        <label>Username:</label>\n        <input type=\"text\" v-model=\"username\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label>Password:</label>\n        <input type=\"password\" v-model=\"password\" class=\"form-control\">\n      </div>\n      <div v-if=\"isRegister\" class=\"form-group\">\n        <label>Confirm Password:</label>\n        <input type=\"password\" v-model=\"confirmPassword\" class=\"form-control\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">{{ buttonText }}</button>\n    </form>\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: String,\n    buttonText: String,\n    isRegister: Boolean\n  },\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const response = await this.$axios.post(this.formAction, {\n          username: this.username,\n          password: this.password,\n          confirmPassword: this.confirmPassword\n        });\n        console.log(response.data);\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          this.errorMessage = 'Invalid username or password';\n        } else {\n          this.errorMessage = 'Error submitting the form';\n        }\n        console.error('Form submission error:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Стили для компонента с синими оттенками */\n.common-form {\n  max-width: 400px;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f2f9ff; /* Голубой фон */\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"] {\n  width: 100%;\n  padding: 8px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.btn-primary {\n  background-color: #007bff; /* Голубой цвет кнопки */\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  border-radius: 4px;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3; /* Темно-голубой цвет при наведении */\n}\n\n.error-message {\n  color: #dc3545; /* Цвет сообщения об ошибке */\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;;EAGfA,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAAwB,eAAjB,WAAS;;EAGbD,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAAwB,eAAjB,WAAS;;EATxBC,GAAA;EAY6BF,KAAK,EAAC;;gEAC3BC,mBAAA,CAAgC,eAAzB,mBAAiB;;EAGlBE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;;;EAhBlCE,GAAA;EAkB2BF,KAAK,EAAC;;;uBAjB/BI,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJJ,mBAAA,CAAoB,YAAAK,gBAAA,CAAbC,MAAA,CAAAC,KAAK,kBACZP,mBAAA,CAcO;IAdAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BX,mBAAA,CAGM,OAHNc,UAGM,GAFJC,UAAwB,E,gBACxBf,mBAAA,CAA2D;IAApDE,IAAI,EAAC,MAAM;IAN1B,uBAAAO,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMoCC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEjB,KAAK,EAAC;iDAAhBkB,KAAA,CAAAC,QAAQ,E,KAEtClB,mBAAA,CAGM,OAHNmB,UAGM,GAFJC,UAAwB,E,gBACxBpB,mBAAA,CAA+D;IAAxDE,IAAI,EAAC,UAAU;IAV9B,uBAAAO,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAUwCC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;IAAEjB,KAAK,EAAC;iDAAhBkB,KAAA,CAAAI,QAAQ,E,KAE/Bf,MAAA,CAAAgB,UAAU,I,cAArBnB,mBAAA,CAGM,OAHNoB,UAGM,GAFJC,UAAgC,E,gBAChCxB,mBAAA,CAAsE;IAA/DE,IAAI,EAAC,UAAU;IAd9B,uBAAAO,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAcwCC,KAAA,CAAAQ,eAAe,GAAAT,MAAA;IAAEjB,KAAK,EAAC;iDAAvBkB,KAAA,CAAAQ,eAAe,E,OAdvDC,mBAAA,gBAgBM1B,mBAAA,CAAuE,UAAvE2B,UAAuE,EAAAtB,gBAAA,CAAtBC,MAAA,CAAAsB,UAAU,iB,4BAEpDX,KAAA,CAAAY,YAAY,I,cAArB1B,mBAAA,CAAmE,KAAnE2B,UAAmE,EAAAzB,gBAAA,CAAnBY,KAAA,CAAAY,YAAY,oBAlBhEH,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}