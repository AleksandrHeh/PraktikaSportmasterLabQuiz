{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport LoginComponent from '../components/LoginComponent.vue';\nimport RegisterComponent from '../components/RegisterComponent.vue';\nimport QuizComponent from '../components/QuizComponent.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: LoginComponent\n}, {\n  path: '/register',\n  name: 'Register',\n  component: RegisterComponent\n}, {\n  path: '/quiz',\n  name: 'Quiz',\n  component: QuizComponent,\n  meta: {\n    requiresAuth: true\n  } // требуем авторизацию для доступа\n}, {\n  path: '*',\n  redirect: '/login'\n} // на случай неверного пути\n];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// Middleware для проверки авторизации\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","LoginComponent","RegisterComponent","QuizComponent","use","routes","path","name","component","meta","requiresAuth","redirect","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record","query","fullPath"],"sources":["/home/aleksandr/PraktikaSportmasterLabQuiz/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport LoginComponent from '../components/LoginComponent.vue';\nimport RegisterComponent from '../components/RegisterComponent.vue';\nimport QuizComponent from '../components/QuizComponent.vue';\n\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: LoginComponent,\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: RegisterComponent,\n  },\n  {\n    path: '/quiz',\n    name: 'Quiz',\n    component: QuizComponent,\n    meta: { requiresAuth: true } // требуем авторизацию для доступа\n  },\n  { path: '*', redirect: '/login' } // на случай неверного пути\n];\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes,\n});\n\n// Middleware для проверки авторизации\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      next({ path: '/login', query: { redirect: to.fullPath } });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,aAAa,MAAM,iCAAiC;AAE3DJ,GAAG,CAACK,GAAG,CAACJ,SAAS,CAAC;AAElB,MAAMK,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEL,aAAa;EACxBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EAAEJ,IAAI,EAAE,GAAG;EAAEK,QAAQ,EAAE;AAAS,CAAC,CAAC;AAAA,CACnC;AAED,MAAMC,MAAM,GAAG,IAAIZ,SAAS,CAAC;EAC3Ba,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BZ;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAClB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACY,KAAK,EAAE;MACVD,IAAI,CAAC;QAAEf,IAAI,EAAE,QAAQ;QAAEsB,KAAK,EAAE;UAAEjB,QAAQ,EAAEQ,EAAE,CAACU;QAAS;MAAE,CAAC,CAAC;IAC5D,CAAC,MAAM;MACLR,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}