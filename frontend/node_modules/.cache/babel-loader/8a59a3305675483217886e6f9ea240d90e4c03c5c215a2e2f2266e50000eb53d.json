{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      questions: [],\n      currentQuestionIndex: 0,\n      score: 0,\n      showResult: false\n    };\n  },\n  methods: {\n    async registerUser() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/register', {\n          username: this.username,\n          password: this.password\n        });\n        console.log('User registered:', response.data);\n        // Дополнительная обработка после успешной регистрации, например, переход на страницу входа или авторизации\n      } catch (error) {\n        console.error('Error registering user:', error.response.data);\n        // Обработка ошибок, например, отображение сообщения об ошибке на форме\n      }\n    },\n    async fetchQuestions() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/questions');\n        this.questions = response.data;\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    },\n    checkAnswer(answer) {\n      if (answer.is_correct) {\n        this.score++;\n      }\n      if (this.currentQuestionIndex + 1 < this.questions.length) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showResult = true;\n      }\n    },\n    restartQuiz() {\n      this.currentQuestionIndex = 0;\n      this.score = 0;\n      this.showResult = false;\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n};","map":{"version":3,"names":["axios","data","username","password","questions","currentQuestionIndex","score","showResult","methods","registerUser","response","post","console","log","error","fetchQuestions","get","checkAnswer","answer","is_correct","length","restartQuiz","mounted"],"sources":["/home/aleksandr/PraktikaSportmasterLabQuiz/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-container\">\n    <!-- Заголовок приложения -->\n    <header>\n      <div class=\"header-content\">\n        <h1>Спортмастер</h1>\n      </div>\n    </header>\n\n    <!-- Контент приложения -->\n    <div class=\"content\">\n      <!-- Результаты викторины (ваш текущий код) -->\n      <div v-if=\"showResult\" class=\"quiz-result\">\n        <h2>Результаты викторины</h2>\n        <p>Вы набрали {{ score }} баллов из {{ questions.length }}.</p>\n        <button @click=\"restartQuiz\" class=\"restart-button\">Начать заново</button>\n      </div>\n\n      <!-- Отображение текущего вопроса -->\n      <div v-else-if=\"currentQuestion\" class=\"quiz-question\">\n        <h2>{{ currentQuestion.question_text }}</h2>\n        <ul>\n          <li v-for=\"answer in currentQuestion.answers\" :key=\"answer.answer_id\">\n            <button @click=\"checkAnswer(answer)\" class=\"answer-button\">{{ answer.answer_text }}</button>\n          </li>\n        </ul>\n      </div>\n\n      <!-- Отображение загрузки -->\n      <div v-else class=\"loading\">\n        Loading...\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      questions: [],\n      currentQuestionIndex: 0,\n      score: 0,\n      showResult: false\n    };\n  },\n  methods: {\n    async registerUser() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/register', {\n          username: this.username,\n          password: this.password\n        });\n        console.log('User registered:', response.data);\n        // Дополнительная обработка после успешной регистрации, например, переход на страницу входа или авторизации\n      } catch (error) {\n        console.error('Error registering user:', error.response.data);\n        // Обработка ошибок, например, отображение сообщения об ошибке на форме\n      }\n    },\n    async fetchQuestions() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/questions');\n        this.questions = response.data;\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    },\n    checkAnswer(answer) {\n      if (answer.is_correct) {\n        this.score++;\n      }\n      if (this.currentQuestionIndex + 1 < this.questions.length) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showResult = true;\n      }\n    },\n    restartQuiz() {\n      this.currentQuestionIndex = 0;\n      this.score = 0;\n      this.showResult = false;\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n};\n</script>\n\n<style scoped>\n/* Стили для вашего сайта */\n.quiz-container {\n  background-color: #f7f7f7;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nheader {\n  background-color: #1E2ED4;\n  color: #FFF;\n  padding: 20px;\n  text-align: center;\n  border-radius: 10px 10px 0 0;\n}\n\n.header-content {\n  max-width: 100%;\n  margin: 0 auto;\n  padding: 0 20px; /* Добавлено для центрирования контента в шапке */\n}\n\nh1 {\n  font-size: 1.8em;\n  margin: 0;\n}\n\n.content {\n  max-width: 600px;\n  margin: 20px auto; /* Центрирование основного контента */\n  padding: 20px;\n}\n\n.quiz-question, .quiz-result, .loading {\n  margin-top: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.quiz-question h2, .quiz-result h2 {\n  margin-bottom: 20px;\n  font-size: 1.5em;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  margin-bottom: 10px;\n}\n\n.answer-button, .restart-button {\n  background-color: #3F51B5;\n  color: #FFF;\n  padding: 10px 15px;\n  margin: 5px 0;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  font-size: 1em;\n  width: 100%;\n  text-align: left;\n}\n\n.answer-button:hover, .restart-button:hover {\n  background-color: #303F9F;\n}\n\n.answer-button:focus, .restart-button:focus {\n  outline: none;\n  box-shadow: 0 0 0 3px rgba(63, 81, 181, 0.5);\n}\n\n.loading {\n  text-align: center;\n  padding: 20px;\n}\n</style>\n"],"mappings":"AAqCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,oBAAoB,EAAE,CAAC;MACvBC,KAAK,EAAE,CAAC;MACRC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,oCAAoC,EAAE;UACtET,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACFS,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACT,IAAI,CAAC;QAC9C;MACF,EAAE,OAAOa,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACJ,QAAQ,CAACT,IAAI,CAAC;QAC7D;MACF;IACF,CAAC;IACD,MAAMc,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAML,QAAO,GAAI,MAAMV,KAAK,CAACgB,GAAG,CAAC,qCAAqC,CAAC;QACvE,IAAI,CAACZ,SAAQ,GAAIM,QAAQ,CAACT,IAAI;MAChC,EAAE,OAAOa,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDG,WAAWA,CAACC,MAAM,EAAE;MAClB,IAAIA,MAAM,CAACC,UAAU,EAAE;QACrB,IAAI,CAACb,KAAK,EAAE;MACd;MACA,IAAI,IAAI,CAACD,oBAAmB,GAAI,IAAI,IAAI,CAACD,SAAS,CAACgB,MAAM,EAAE;QACzD,IAAI,CAACf,oBAAoB,EAAE;MAC7B,OAAO;QACL,IAAI,CAACE,UAAS,GAAI,IAAI;MACxB;IACF,CAAC;IACDc,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAChB,oBAAmB,GAAI,CAAC;MAC7B,IAAI,CAACC,KAAI,GAAI,CAAC;MACd,IAAI,CAACC,UAAS,GAAI,KAAK;IACzB;EACF,CAAC;EACDe,OAAOA,CAAA,EAAG;IACR,IAAI,CAACP,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}