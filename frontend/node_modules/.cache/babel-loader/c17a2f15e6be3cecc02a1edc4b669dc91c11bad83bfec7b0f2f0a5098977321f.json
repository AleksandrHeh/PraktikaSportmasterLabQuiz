{"ast":null,"code":"export default {\n  props: {\n    title: String,\n    buttonText: String,\n    isRegister: Boolean // Флаг для отображения/скрытия поля подтверждения пароля при регистрации\n  },\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      // Поле подтверждения пароля для регистрации\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Отправка запроса на сервер\n        const response = await this.$axios.post(this.formAction, {\n          username: this.username,\n          password: this.password,\n          confirmPassword: this.confirmPassword // Отправка подтверждения пароля при регистрации\n        });\n        // Обработка успешного ответа\n        console.log(response.data);\n      } catch (error) {\n        // Обработка ошибок\n        if (error.response && error.response.status === 400) {\n          this.errorMessage = 'Неправильное имя пользователя или пароль';\n        } else {\n          this.errorMessage = 'Ошибка при отправке формы';\n        }\n        console.error('Ошибка отправки формы:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","title","String","buttonText","isRegister","Boolean","data","username","password","confirmPassword","errorMessage","methods","submitForm","response","$axios","post","formAction","console","log","error","status"],"sources":["/home/aleksandr/PraktikaSportmasterLabQuiz/frontend/src/components/CommonForm.vue"],"sourcesContent":["<template>\n  <div class=\"auth-container\">\n    <h2>{{ title }}</h2>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label>Имя пользователя:</label>\n        <input type=\"text\" v-model=\"username\">\n      </div>\n      <div>\n        <label>Пароль:</label>\n        <input type=\"password\" v-model=\"password\">\n      </div>\n      <div v-if=\"isRegister\">\n        <label>Подтвердите пароль:</label>\n        <input type=\"password\" v-model=\"confirmPassword\">\n      </div>\n      <button type=\"submit\">{{ buttonText }}</button>\n    </form>\n    <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: String,\n    buttonText: String,\n    isRegister: Boolean  // Флаг для отображения/скрытия поля подтверждения пароля при регистрации\n  },\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',  // Поле подтверждения пароля для регистрации\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Отправка запроса на сервер\n        const response = await this.$axios.post(this.formAction, {\n          username: this.username,\n          password: this.password,\n          confirmPassword: this.confirmPassword  // Отправка подтверждения пароля при регистрации\n        });\n        // Обработка успешного ответа\n        console.log(response.data);\n      } catch (error) {\n        // Обработка ошибок\n        if (error.response && error.response.status === 400) {\n          this.errorMessage = 'Неправильное имя пользователя или пароль';\n        } else {\n          this.errorMessage = 'Ошибка при отправке формы';\n        }\n        console.error('Ошибка отправки формы:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Стили для компонента */\n.auth-container {\n  max-width: 400px;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f2f9ff; /* Голубой фон */\n}\n\nh2 {\n  text-align: center;\n}\n\nform {\n  margin-bottom: 20px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"] {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\nbutton {\n  background-color: #007bff; /* Голубой цвет кнопки */\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  border-radius: 4px;\n}\n\nbutton:hover {\n  background-color: #0056b3; /* Темно-голубой цвет при наведении */\n}\n\np {\n  color: red;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"AAuBA,eAAe;EACbA,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM;IACbC,UAAU,EAAED,MAAM;IAClBE,UAAU,EAAEC,OAAM,CAAG;EACvB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MAAG;MACtBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;UACvDT,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,eAAe,EAAE,IAAI,CAACA,eAAc,CAAG;QACzC,CAAC,CAAC;QACF;QACAQ,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACP,IAAI,CAAC;MAC5B,EAAE,OAAOa,KAAK,EAAE;QACd;QACA,IAAIA,KAAK,CAACN,QAAO,IAAKM,KAAK,CAACN,QAAQ,CAACO,MAAK,KAAM,GAAG,EAAE;UACnD,IAAI,CAACV,YAAW,GAAI,0CAA0C;QAChE,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,2BAA2B;QACjD;QACAO,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}